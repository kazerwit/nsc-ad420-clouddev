swagger: "2.0"
info:
  description: "This is a task API"
  version: "1.0.0"
  title: "Swagger Task API"
  termsOfService: "http://bonnie.com/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "taskapi.bonnie.com"
basePath: "/v2"
tags:
- name: "task"
  description: "Everything about tasks"
- name: "user"
  description: "Operations about users"
schemes:
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Add a new user"
      description: ""
      operationId: "addUser"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
      - "user"
      summary: "Update an existing user"
      description: ""
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
        405:
          description: "Validation exception"
  /user/{userId}:
    get:
      tags:
      - "user"
      summary: "Find User by ID"
      description: "Returns a single user"
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of user to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/user"
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
    delete:
      tags:
      - "user"
      summary: "Deletes a user"
      description: ""
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "userId"
        in: "path"
        description: "User id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
  /user/{userId}/task:
    post:
      tags:
      - "task"
      summary: "Create task"
      description: "Create task"
      operationId: "createTask"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of user to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        default:
          description: "successful operation"
  /user/{userId}/task/{taskId}:
    get:
      tags:
      - "task"
      summary: "Find task by ID"
      description: "Returns a single task"
      operationId: "getTaskById"
      produces:
      - "application/json"
      parameters:
      - name: "taskId"
        in: "path"
        description: "ID of task to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "userId"
        in: "path"
        description: "ID of user to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/task"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Task not found"
    delete:
      tags:
      - "task"
      summary: "Deletes a task"
      description: ""
      operationId: "deleteTask"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "taskId"
        in: "path"
        description: "Task id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Task not found"
definitions:
  task:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      description:
        type: "string"
    xml:
      name: "task"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  user:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      tasks:
        type: "array"
        items:
          $ref: "#/definitions/task"
    xml:
      name: "user"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"